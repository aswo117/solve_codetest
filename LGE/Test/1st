#2
import sys
from collections import deque

q_input = deque()
q_list = deque()
current = []
before = []
sol = [0, 0]

def InputData():
	readl = sys.stdin.readline
	N = int(readl())
	S = list(map(int, readl().split()))

	return N, S

# 입력 Input
# N: 낱말의 개수 Number of words
# S: 낱말 Words
N, S = InputData()
# print(N, S)

for i in range(len(S)):
	# print(f"S[i] = {S[i]}")
	# print(f"before = {before}")

	target = int(i%2)
	if not q_list:
		q_list.append(S[i])
		# print("not q")
	else:
		if int(str(S[i])[0]) == int(str(before)[-1]):
			if S[i] in q_list: #중복
				# print("중복")
				for j in range(len(q_list)):
					# print(f"중복 찾기, i = {j}, {q_list[j]}, target = {S[i]}")
					if q_list[j] == S[i]:
						# print(f"찾았다 : {q_list[j]}, i = {j}")
						sol[target] = sol[target] + j + 1
						break
					else:
						q_list.append(q_list.popleft())
			else: #성공
				# print("성공")
				q_list.append(S[i])
		else:#다름
			# print("다름")
			sol[target] = sol[target] + len(q_list)
			q_list.append(S[i])
	before = S[i]
	# print(f"q_list = {q_list}")
	# print(f"target = {target}")
	# print(f"sol[0] = {sol[0]}, sol[1] = {sol[1]}")
	# print()
# 코드 작성 Write code

# 출력 Output
print(sol[0], sol[1])


#1
import sys

def Input_Data():
	readl = sys.stdin.readline
	R, C = map(int,readl().split())
	raw = [list(map(int,readl().split()))for r in range(R)]
	return R, C, raw

def Encoding_Data():
	# 작성해야 하는 부분 Complete the function code
	encoded = []
	
	
	return encoded


def Output_Data(encoded):
	print(R, C)
	print(*encoded)
	

encoded = []
# 입력 받는 부분 input section
R, C, raw = Input_Data()

# 작성해야 할 함수 Function to be implemented: Encoding_Data()
encoded = Encoding_Data()

# 출력하는 부분 output section
Output_Data(encoded)

# 4 3
# 15974662 14214476 16540990 
# 3412884 13629328 11094264 
# 8391323 15192188 7517293 
# 4153032 8827344 10178575 

# 4 3
# 246 0 223 41 251 39 0 0 48 146 207 178 170 95 0 0 128 83 230 143 117 173 0 0 58 249 133 154 154 129 0 0

"""
import sys

def Input_Data():
	readl = sys.stdin.readline
	R, C = map(int,readl().split())

	'''
	padding_cnt = 4 - ((C * 2) % 4)
	if padding_cnt == 4: padding_cnt = 0
	'''

	encoded = list(map(int,readl().split()))
	return R, C, encoded

def Decoding_Data():
	raw_decoded = [[0 for c in range(C)]for r in range(R)]
	idx_encoded = 0

	padding_cnt = 4 - ((C * 2) % 4)
	if padding_cnt == 4: padding_cnt = 0

	for r in range(R):
		for c in range(C):
			pixel_encoded = (encoded[idx_encoded] << 8) | encoded[idx_encoded + 1]
			idx_encoded += 2
			pixel_R = ((pixel_encoded >> 11) & 0x1f) << 3
			pixel_G = ((pixel_encoded >> 5) & 0x3f) << 2
			pixel_B = (pixel_encoded & 0x1f) << 3
			raw_decoded[r][c] = (pixel_R << 16) | (pixel_G << 8) | (pixel_B)
		idx_encoded += padding_cnt

	return raw_decoded


def Output_Data(raw_decoded):
	print(R, C)
	for rlist in raw_decoded:
		print(*rlist)
	

# 입력 받는 부분
R, C, encoded = Input_Data()

raw_decoded = Decoding_Data()

# 출력하는 부분
Output_Data(raw_decoded)
"""

